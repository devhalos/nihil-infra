name: 'nihil-state'

on:
  push:
    paths:
        - '.github/**'
        - 'nihil-state/**'


defaults:
  run: 
    working-directory: nihil-state

jobs:
  build:
    name: 'build'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 'checkout'
        uses: actions/checkout@v2

      - name: 'aws: configure'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.CICD_PIPELINE_ROLE }}
          aws-region: ap-southeast-1

      - name: 'tf: setup'
        uses: hashicorp/setup-terraform@v1

      - name: 'tf: format'
        id: fmt
        run: terraform fmt -check

      - name: 'tf: init'
        id: init
        run: terraform init

      - name: 'tf: validate'
        id: validate
        run: terraform validate

      - name: 'tf: plan'
        id: plan
        run: terraform plan -out local.tfplan

      - name: 'view files'
        id: view-files
        run: ls -al

      - name: 'upload artifact: terraform resources'
        uses: actions/upload-artifact@v2
        with:
          name: terraform-artifact
          path: nihil-state/.terraform

      - name: 'upload artifact: terraform plan file'
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-artifact
          path: nihil-state/local.tfplan

  deploy:
    name: 'deploy'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 'checkout'
        uses: actions/checkout@v2

      - name: 'aws: configure'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.CICD_PIPELINE_ROLE }}
          aws-region: ap-southeast-1

      - name: 'tf: setup'
        uses: hashicorp/setup-terraform@v1

      - uses: actions/download-artifact@v2
        with:
          name: terraform-artifact

      - uses: actions/download-artifact@v2
        with:
          name: terraform-plan-artifact

      - name: 'view files'
        id: view-files
        run: ls -al

      # - name: 'tf: apply'
      #   id: apply
      #   run: terraform apply local.tfplan






  