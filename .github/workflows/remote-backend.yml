name: remote-backend

on:
  push:
    paths:
      - '*'
      - '.github/*'
      - '.github/workflows/remote-backend.yml'
      - '.husky/**'
      - 'remote-backend/**'

defaults:
  run: 
    working-directory: remote-backend

jobs:

  build:
    name: 'build'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 'checkout'
        uses: actions/checkout@v2

      - name: 'aws: configure'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.CICD_PIPELINE_REMOTE_BACKEND_ROLE_ARN }}
          aws-region: ap-southeast-1

      - name: 'tf: setup'
        uses: hashicorp/setup-terraform@v1

      - name: 'tf: format'
        id: fmt
        run: terraform fmt -check -recursive

      - name: 'tf: init'
        id: init
        run: terraform init

      - name: 'tf: validate'
        id: validate
        run: terraform validate

      - name: 'tf: plan'
        id: plan
        run: terraform plan -out local.tfplan

      - name: 'view files'
        id: view-files
        run: ls -al

      - name: 'upload artifact: terraform plan output'
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-artifact
          path: remote-backend/local.tfplan


  deploy:
    if: contains(github.ref, 'refs/heads/main') || contains(github.ref, 'refs/tags')
    needs: build

    name: 'deploy'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 'checkout'
        uses: actions/checkout@v2

      - name: 'aws: configure'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.CICD_PIPELINE_REMOTE_BACKEND_ROLE_ARN }}
          aws-region: ap-southeast-1

      - name: 'tf: setup'
        uses: hashicorp/setup-terraform@v1

      - name: 'tf: init'
        id: init
        run: terraform init     

      - name: 'download artifact: terraform plan output'
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan-artifact
          path: remote-backend

      - name: 'tf: apply'
        id: apply
        run: terraform apply local.tfplan
  

  create-release:
    if: contains(github.ref, 'refs/heads/main')
    needs: deploy

    name: 'create-release'
    runs-on: ubuntu-latest 

    steps:
      - name: 'checkout'
        uses: actions/checkout@v2

      - uses: google-github-actions/release-please-action@v3.1.2
        with:
          token: ${{ secrets.CICD_PIPELINE_GITHUB_TOKEN }}
          release-type: simple
          package-name: remote-backend
          path: remote-backend
          monorepo-tags: true






  